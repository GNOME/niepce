Database description
Hubert Figuiere <hub@figuiere.net>


Adminstration table. Contain various parameters.

admin	        key            Key
                value	       Value

The known keys are:
version :       The version of the database. Current = 1.


Files in the library

files           id             Unique ID in the database
		main_file      ID in fsfiles for the main file.
		path           The absolute path to the file
		parent_id      The ID on the containing folder (= folders.id)
		orientation    The Exif orientation of the file
		file_type      The file type. See db::LibFile::FileType for
                               possible values.
		file_date      The file date, likely shooting date from 
                               Exif (time_t)
		rating         The file rating (0-5)
		label          The label (labels.id)
		import_date    The date of import in the database (time_t)
		mod_date       The date modified (time_t)
		xmp            The XMP blob
		xmp_data       The date the XMP is rewritten on disk (time_t)
		xmp_file       The id of the fsfile that represent the XMP (int)
		jpeg_file      The id of the JPEG for RAW+JPEG. Implies 
                               file_type is LibFile::FILE_TYPE_RAW_JPEG (int)

Filesystem files in the library

fsfiles         id             Unique ID in the database
                path           The absolute path

Folders for the library "storage"

folders         id             Unique ID in the database
		path           The absolute path of the folder
		name 	       The display name
		vault_id       The vault ID (unused) 0 = no vault (= vaults.id)
		locked         Can't be deleted if non 0. For special folders.
		virtual        Type of virtual item. 0 = regular. 
                               See libfolder.hpp
		parent_id      The ID of the parent (= folders.id). 0 = top level

Keywords are defined in on table, and linked to files in the other

keywords        id             Unique ID in the database
		keyword	       The text of the keyword
		parent_id      The parent keyword. 0 = top level (= keywords.id)

keywording	file_id	       The file ID it is linked to (= files.id)
		keyword_id     The keyword ID associated (= keywords.id)

There shouldn't be more than one pair of identical (file_id,keyword_id)

Labels for the file. There are very few of these.

labels          id             The ID of the label
                name           The name of the label (user displayed)
		color          The RGB8 color in "R G B" format.

The update queue for XMP. When an XMP is changed in the DB it is
queued in the table.

xmp_update_queue   id          File ID to update.

Vaults are storage location for files. Currently unimplemented

vaults		id	       Unique ID in the database
		path	       Absolute path of the vault


